1.在看到error(5)的时候，发现pl0在常数定义上有这样一个问题，就是可以有一下的方式。
const a=1;b=2;
或者
const a=1;
b=2;
这样对于程序的可读性不好，应该在此添加一个错误。在已经识别出";"之后应该去识别declbegsys。
这个问题同样出现在变量定义中。

2.在看到error(6)的时候，他处理这个错误的时候是先调用了test程序，然后再由test程序去调用error，在test调用时，需要传递3个参数，前两个是一些规范，最后一个时错误的种类，其实只传入前两个参数中的第一个参数就可以判断读入的东西是否合法了，但是却传了两个，为的就是如果在遇见非法字符的时候可以继续读取信息而不影响后面的测试，因为在程序之后，读入的东西是否是我们所定义或者声明的我们并不知道，这时候我们将他们全部取"|"运算，也就时包含了所有合法的字符和字符串，这样我们就可一略去所有的非法字符，仅仅只对可能对我们有用的信息进行处理。error(6)还表明了，在函数定义之后不能再次定义常量以及全局的变量。

3.在做error(7)时，发现如果是在函数定义之后出现问题时，error6,7几乎时同时出现的，这从代码实现上也可以看出，他们实际上有很大程度上的相似性。error6,7这两个错误在过程定义中的检查起到了很大的作用，他防止了很多的非法写法，他决定了在过程定义之后要么只能是过程，要么只能接着begin,call,if,while。

4.在看完整个错误的种类之后，我发现这里面有很多不太好的语法，比如说整个程序时可以没有begin和end的，而只需要以"."来进行对整个程序结束。比如下面的程序：
const a=1;
var b;

if a<1 then b:=1.
我觉得这种写法并不是很好。而需要在上面添加一个错误的判断。至少程序需要包含一个begin,end的配对。
