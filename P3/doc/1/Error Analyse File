1.
错误发生场景：在使用const时，若对赋值使用":="
错误处理方法：若在定义const时，给常量定义值时，若用":=",则直接报错,进入error(1)，但接下来会继续读入下面字符
错误处理时期：语法分析
2.
错误发生场景：在使用const时，在=之后写的不是数
错误处理方法：直接报错，进入error(2)
错误处理时期：语法分析
3.
错误发生场景：在使用const时，标识符后不是"="或":="时
错误处理方法：直接报错，进入error(3)
错误处理时期：语法分析
4.
错误发生场景：在使用const，var, procedure时后面不是标识符
错误处理方法：直接报错,进入error(4)
错误处理时期：语法分析
5.
错误发生场景：在常量，变量，过程定义结束之后没有";"
错误处理方法：直接报错，进入error(5)
错误处理时期：语法分析
6.
错误发生场景：过程声明完成之后，出现了一些不应该出现的符号，比如";",":",数字,非法符号等
错误处理方法：通过test进入error(6)，然后他会跳过过程定义之后的各种不该出现的字符，然后继续读取下面的字符
错误处理时期：语法分析
7.
错误发生场景：在过程定义之后，接下来的不是以标识符，begin,call,if,while开始的时候
错误处理方法：通过test进入error(7),然后和error(6)一样进行处理不应该出现的字符，并继续读下面的字符
错误处理时期：语法分析
8.
错误发生场景：在分程序结束之后的语句不正确
错误处理方法：通过test进入error(8)
错误处理时期：语法分析
9.
错误发生场景：在最后一个end后面不是句号
错误处理方法：在主函数中，当把整个程序检查完成之后，如果发现最后一个字符不是".",则会立刻进入error(9),进行报错
错误处理时期：语法分析
10.
错误发生场景：语句与语句之间缺少分号
错误处理方法：直接报错，进入error(10)
错误处理时期：语法分析
11.
错误发生场景：使用一个未声明的标识符
错误处理方法：直接报错，进入error(11)
错误处理时期：语法分析
12.
错误发生场景：向常量和变量赋值，即预计在赋值符的左端是常量或者过程
错误处理方法：直接报错，进入error(12),并将i设置为0
错误处理时期：语法分析
13.
错误发生场景：当变量要赋值时，但变量后面不是":="时
错误处理方法：直接报错，进入error(13)
错误处理时期：语法分析
14.
错误发生场景：当call后面跟着的不是标识符时
错误处理方法：直接报错，进入error(14)
错误处理时期：语法分析
15.
错误发生场景：当call后面跟着的是所定义的常量时
错误处理方法：直接报错，进入error(15)
错误处理时期：语法分析
16.
错误发生场景：当if语句后面没有跟着then时
错误处理方法：直接报错，进入error(16)
错误处理时期：语法分析
17.
错误发生场景：在begin内包含的程序结束时，没有end结尾时
错误处理方法：直接报错，进入error(17)
错误处理方法：语法分析
18.
错误发生场景：在while语句之后没有do时
错误处理方法：直接报错，进入error(18)
错误处理时期：语法分析
19.
错误发生场景：在语句结束之后的记号不正确时
错误处理方法：直接报错，进入error(19)
错误处理时期：语法分析
20.
错误发生场景：在if语句中，当表达式不是与odd有关时，如果表达式连接的符号不是比较预算符时
错误处理方法：直接报错，进入error(20)
错误处理时期：语法分析
21.
错误发生场景：在遇到表达式时，在右端的式子中出现了过程标识符
错误处理方法：直接报错，进入error(21)
错误处理时期：语法分析
22.
错误发生场景：在遇到表达式时，在右端的式子中在出现了左括号，却没有出现相应的右括号
错误处理方法：直接报错，进入error(22)
错误处理时期：语法分析
23.
错误发生场景：在遇到表达式时，在右端的式子中因子后面跟着的符号不是算符
错误处理方法：通过test进入error(23)
错误处理时期：语法分析
24.
错误发生场景：在遇到表达式的时候，在赋值符号的右端第一个符号如果不是所期望的符号时
错误处理方法：由test进入error(24)进行处理
错误处理时期：语法分析
30.
错误发生场景：无
错误处理方法：无
错误处理时期：无
31.
错误发生场景：给常量赋值时，所赋值的数超过了2047
错误处理方法：直接报错，进入error(31),并且将所赋值设置为0
错误处理时期：词法分析，语法分析
32.
错误发生场景：程序嵌套层次太多
错误处理方法：直接报错，进入error(32)
错误处理时期：语法分析
