Pcode指令扩展之后一个共有18条指令，下面分别简单一下每一条指令的功能及使用
01.*lit	将常数放在栈顶(与原Pcode指令相同)
02.*opr	操作运算符(与原Pcode指令大致一样，加入了%运算，操作数为6)
03.*lod	将变量放在栈顶(与原Pcode指令相同)
04.*sto	将栈顶的值给变量(与原Pcode指令大致一样,取消了一赋值就输出这个功能)
05.*cal	调用函数(与原Pcode指令大致)
06.*Int	开取空间(与原Pcode指令相同)
07.*jmp	跳转(与原Pcode指令相同)
08.*jpc	条件跳转(与原Pcode指令相同)
09.*end	结束标志(来作为文件的结尾标志，便于文件读操作)
10.*str	将栈顶的值给寄存器
11.*giv	函数传参(将寄存器的值赋值给相应的空间，用于参数的传递)
12.*ldr	将寄存器的值给栈顶
13.*lda	将数组元素给栈顶(地址存在第三个操作数所对应的寄存器中)
14.*sta	将栈顶值给数组元素(地址存在第三个操作数所对应的寄存器中)
15.*sav	保存寄存器值(将寄存器的值保存在寄存器列表中)
16.*get	得到寄存器值(从寄存器列表中读取寄存器的值)
17.*rea	读入一个数，并将其放入栈顶
18.*wri	将栈顶的数输出
还有一个变化就是每次函数调用需要申请的最小的空间从3个增加为4个，为了函数值返回使用，若有返回值，则将返回值存放在申请空间的第一个，原来3个空间存放的内容都一次向上移动一个空间进行存放。
这就是我的Pcode解释器。
更详细的设计请参考src中的C0interpret.c文件。
Made By SHvsMK
王一橙
PB11011030
